generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model admin {
  id            String    @unique(map: "admin_id") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email         String    @unique @db.VarChar(50)
  username      String    @db.VarChar(50)
  password_hash String    @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)
}

model article {
  article_id String    @unique(map: "article_id") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title      String    @db.VarChar(100)
  content    String
  author_by  String?   @default(dbgenerated("'a8c743fb-60dc-4c2f-8ccf-264dbf4a6c00'::uuid")) @db.Uuid
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  image_url  String?
  slug       String?   @unique(map: "slug_name")
  tags       String[]  @db.VarChar(50)
  author     author?   @relation(fields: [author_by], references: [author_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_author")
}

model author {
  author_id         String    @unique(map: "author_id") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  author_name       String    @db.VarChar(50)
  author_desciption String    @db.VarChar(255)
  author_image      String?   @db.VarChar(255)
  created_at        DateTime? @default(now()) @db.Timestamp(6)
  updated_at        DateTime? @default(now()) @db.Timestamp(6)
  article           article[]
}

model resetToken {
  id        String   @unique(map: "id") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email     String
  token     String   @unique
  expiresAt DateTime
  used      Boolean  @default(false)
}
